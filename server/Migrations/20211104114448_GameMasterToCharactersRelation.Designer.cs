// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ggGURPS.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211104114448_GameMasterToCharactersRelation")]
    partial class GameMasterToCharactersRelation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Advantage", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AffectedAttribute")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Advantages");
                });

            modelBuilder.Entity("AdvantageCharacter", b =>
                {
                    b.Property<long>("AdvantagesId")
                        .HasColumnType("bigint");

                    b.Property<long>("CharactersId")
                        .HasColumnType("bigint");

                    b.HasKey("AdvantagesId", "CharactersId");

                    b.HasIndex("CharactersId");

                    b.ToTable("TableRelations_CharactersToAdvantages");
                });

            modelBuilder.Entity("Campaign", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("GameMasterId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GameMasterId");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("Character", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Age")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Birthday")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CampaignId")
                        .HasColumnType("bigint");

                    b.Property<int>("Dexterity")
                        .HasColumnType("int");

                    b.Property<int>("FatiguePoints")
                        .HasColumnType("int");

                    b.Property<long?>("GameMasterId")
                        .HasColumnType("bigint");

                    b.Property<int>("Health")
                        .HasColumnType("int");

                    b.Property<int>("HitPoints")
                        .HasColumnType("int");

                    b.Property<int>("Inteligence")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Npc")
                        .HasColumnType("bit");

                    b.Property<int>("Perception")
                        .HasColumnType("int");

                    b.Property<string>("PhysicalDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("PlayerId")
                        .HasColumnType("bigint");

                    b.Property<int>("RemainingPoints")
                        .HasColumnType("int");

                    b.Property<int>("SpentPoints")
                        .HasColumnType("int");

                    b.Property<int>("Strength")
                        .HasColumnType("int");

                    b.Property<int>("TotalPoints")
                        .HasColumnType("int");

                    b.Property<int>("Will")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("GameMasterId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("CharacterItem", b =>
                {
                    b.Property<long>("CharactersId")
                        .HasColumnType("bigint");

                    b.Property<long>("ItemsId")
                        .HasColumnType("bigint");

                    b.HasKey("CharactersId", "ItemsId");

                    b.HasIndex("ItemsId");

                    b.ToTable("TableRelations_CharactersToItems");
                });

            modelBuilder.Entity("CharacterSkill", b =>
                {
                    b.Property<long>("CharactersId")
                        .HasColumnType("bigint");

                    b.Property<long>("SkillsId")
                        .HasColumnType("bigint");

                    b.HasKey("CharactersId", "SkillsId");

                    b.HasIndex("SkillsId");

                    b.ToTable("TableRelations_CharactersToSkills");
                });

            modelBuilder.Entity("GameMaster", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("GameMasters");
                });

            modelBuilder.Entity("Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DamageDice")
                        .HasColumnType("int");

                    b.Property<int>("DamageModifier")
                        .HasColumnType("int");

                    b.Property<int>("DamageReduction")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ItemType")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Range")
                        .HasColumnType("int");

                    b.Property<int>("RateOfFire")
                        .HasColumnType("int");

                    b.Property<int>("Recoil")
                        .HasColumnType("int");

                    b.Property<int>("SwingDamageDice")
                        .HasColumnType("int");

                    b.Property<int>("SwingDamageModifier")
                        .HasColumnType("int");

                    b.Property<int>("ThrustDamageDice")
                        .HasColumnType("int");

                    b.Property<int>("ThrustDamageModifier")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("Player", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Roll", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AdvantageId")
                        .HasColumnType("bigint");

                    b.Property<long?>("CharacterId")
                        .HasColumnType("bigint");

                    b.Property<int>("FinalResult")
                        .HasColumnType("int");

                    b.Property<long?>("GameMasterId")
                        .HasColumnType("bigint");

                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<long?>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<int>("Modifier")
                        .HasColumnType("int");

                    b.Property<long>("NumberOfDice")
                        .HasColumnType("bigint");

                    b.Property<int>("RollResult")
                        .HasColumnType("int");

                    b.Property<long?>("SkillId")
                        .HasColumnType("bigint");

                    b.Property<bool>("Success")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AdvantageId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("GameMasterId");

                    b.HasIndex("ItemId");

                    b.HasIndex("SkillId");

                    b.ToTable("Rolls");
                });

            modelBuilder.Entity("Skill", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BaseAttribute")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpentPoints")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Skills");
                });

            modelBuilder.Entity("AdvantageCharacter", b =>
                {
                    b.HasOne("Advantage", null)
                        .WithMany()
                        .HasForeignKey("AdvantagesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Campaign", b =>
                {
                    b.HasOne("GameMaster", "GameMaster")
                        .WithMany("Campaigns")
                        .HasForeignKey("GameMasterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GameMaster");
                });

            modelBuilder.Entity("Character", b =>
                {
                    b.HasOne("Campaign", "Campaign")
                        .WithMany("Characters")
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GameMaster", "GameMaster")
                        .WithMany("Characters")
                        .HasForeignKey("GameMasterId");

                    b.HasOne("Player", "Player")
                        .WithMany("Characters")
                        .HasForeignKey("PlayerId");

                    b.Navigation("Campaign");

                    b.Navigation("GameMaster");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("CharacterItem", b =>
                {
                    b.HasOne("Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Item", null)
                        .WithMany()
                        .HasForeignKey("ItemsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CharacterSkill", b =>
                {
                    b.HasOne("Character", null)
                        .WithMany()
                        .HasForeignKey("CharactersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Skill", null)
                        .WithMany()
                        .HasForeignKey("SkillsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Roll", b =>
                {
                    b.HasOne("Advantage", "Advantage")
                        .WithMany("Rolls")
                        .HasForeignKey("AdvantageId");

                    b.HasOne("Character", "Character")
                        .WithMany("Rolls")
                        .HasForeignKey("CharacterId");

                    b.HasOne("GameMaster", "GameMaster")
                        .WithMany("Rolls")
                        .HasForeignKey("GameMasterId");

                    b.HasOne("Item", "Item")
                        .WithMany("Rolls")
                        .HasForeignKey("ItemId");

                    b.HasOne("Skill", "Skill")
                        .WithMany("Rolls")
                        .HasForeignKey("SkillId");

                    b.Navigation("Advantage");

                    b.Navigation("Character");

                    b.Navigation("GameMaster");

                    b.Navigation("Item");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("Advantage", b =>
                {
                    b.Navigation("Rolls");
                });

            modelBuilder.Entity("Campaign", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("Character", b =>
                {
                    b.Navigation("Rolls");
                });

            modelBuilder.Entity("GameMaster", b =>
                {
                    b.Navigation("Campaigns");

                    b.Navigation("Characters");

                    b.Navigation("Rolls");
                });

            modelBuilder.Entity("Item", b =>
                {
                    b.Navigation("Rolls");
                });

            modelBuilder.Entity("Player", b =>
                {
                    b.Navigation("Characters");
                });

            modelBuilder.Entity("Skill", b =>
                {
                    b.Navigation("Rolls");
                });
#pragma warning restore 612, 618
        }
    }
}
